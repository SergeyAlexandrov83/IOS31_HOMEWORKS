import UIKit
//–°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å –ê–≤—Ç–æ–º–æ–±–∏–ª—å
class Automobile {
    //–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Å–≤–æ–π—Å—Ç–≤–∞ - –Ω–∞–∑–≤–∞–Ω–∏–µ, –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–µ–Ω–∑–∏–Ω–∞, –ø—Ä–æ–±–µ–≥, —Å—Ä–µ–¥–Ω–∏–π —Ä–∞—Å—Ö–æ–¥ —Ç–æ–ø–ª–∏–≤–∞, –æ–±—ä—ë–º –±–∞–∫–∞, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –º–∞—Å—Å–∞
    let name: String
    let year: Int
    var fuel: Double
    var distance: Int
    let midFuelOn100km: Int
    let fuelTank: Int
    let maxMass: Int
    //–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –≤—ã—á–∏—Å–ª—è–µ–º–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ ¬´–°—Ç–∞—Ä–æ–µ –ª–∏ –∞–≤—Ç–æ¬ª. –°—Ç–∞—Ä—ã–º —Å—á–∏—Ç–∞—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å, –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞ 15 –º–µ–Ω—å—à–µ, —á–µ–º —Ç–µ–∫—É—â–∏–π - 2023
    var isOld: Bool {
        guard year > 2008 else {return true}
        return false
    }
    //–î–æ—Ä–∞–±–æ—Ç–∞–π—Ç–µ –∫–ª–∞—Å—Å –ê–≤—Ç–æ–º–æ–±–∏–ª—å –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –≤–æ–¥–∏—Ç–µ–ª–µ–º:
    // - –£ –ê–≤—Ç–æ–º–æ–±–∏–ª—è –¥–æ–ª–∂–µ–Ω –ø–æ—è–≤–∏—Ç—å—Å—è –≤–æ–¥–∏—Ç–µ–ª—å (—Å–≤–æ–π—Å—Ç–≤–æ)
    var driver: Driver
    //–ü—Ä–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –≤ –∫–ª–∞—Å—Å–µ —Å–≤–æ–π—Å—Ç–≤–∞ —Å –ø–æ–º–æ—â—å—é –æ–±—ã—á–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    init(name: String,
         year: Int,
         fuel: Double,
         distance: Int,
         midFuelOn100km: Int,
         fuelTank: Int,
         maxMass: Int,
         driver: Driver) {
        self.name = name
        self.year = year
        self.fuel = fuel
        self.distance = distance
        self.midFuelOn100km = midFuelOn100km
        self.fuelTank = fuelTank
        self.maxMass = maxMass
        self.driver = driver
    }
    //–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –º–µ—Ç–æ–¥—ã ¬´–¥–≤–∏–≥–∞—Ç—å—Å—è¬ª, ¬´–æ–± —ç—Ç–æ–º –¢–°¬ª, –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∏ ¬´–∑–∞–ø—Ä–∞–≤–∫–∞¬ª
    //–ú–µ—Ç–æ–¥ –î–≤–∏–≥–∞—Ç—å—Å—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–º, –¥–æ–±–∞–≤–ª—è–µ—Ç –∏—Ö –≤ –ø—Ä–æ–±–µ–≥, –∞ —Ç–∞–∫–∂–µ —É–º–µ–Ω—å—à–∞–µ—Ç  –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–ø–ª–∏–≤–∞, —Å–æ–≥–ª–∞—Å–Ω–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—é —Å—Ä–µ–¥–Ω–µ–≥–æ —Ä–∞—Å—Ö–æ–¥–∞. –í –∫–æ–Ω—Å–æ–ª—å –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ ¬´\(–Ω–∞–∑–≤–∞–Ω–∏–µ) –ø—Ä–æ–µ—Ö–∞–ª \(–¥–∏—Å—Ç–∞–Ω—Ü–∏—è) –∫–º¬ª
    func drive(km: Int) {
        guard fuel > Double(km * midFuelOn100km / 100) else {
            let leftDist = fuel / Double(midFuelOn100km) * 100
            distance += Int(leftDist)
            print("\(name) –ø—Ä–æ–µ—Ö–∞–ª \(Int(leftDist)) –∫–º –∏ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è –±–µ–Ω–∑–∏–Ω")
            return fuel = 0
        }
        distance += km
        fuel -= Double(km * midFuelOn100km / 100)
        print("\(name) –ø—Ä–æ–µ—Ö–∞–ª \(km) –∫–º")
    }
    //–ú–µ—Ç–æ–¥ ¬´–æ–± —ç—Ç–æ–º –¢–°¬ª —Ä–∞—Å–ø–µ—á–∞—Ç—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª–µ
    func about() {
        print("–ê–≤—Ç–æ–º–æ–±–∏–ª—å: \(name), –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞ - \(year), –≤–ª–∞–¥–µ–ª–µ—Ü: \(driver.name), –ø—Ä–æ–±–µ–≥: \(distance), –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–µ–Ω–∑–∏–Ω–∞: \(fuel)")
    }
    //–ú–µ—Ç–æ–¥ ¬´–∑–∞–ø—Ä–∞–≤–∫–∞¬ª –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∏—Ç—Ä–æ–≤ —Ç–æ–ø–ª–∏–≤–∞ –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç —ç—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ –±–∞–∫. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤ –±–∞–∫ –Ω–µ –ø–æ–º–µ—Å—Ç–∏—Ç—Å—è –±–æ–ª—å—à–µ –µ–≥–æ –æ–±—ä—ë–º–∞
    // - –ú–µ—Ç–æ–¥ –ó–∞–ø—Ä–∞–≤–∫–∞ —Ç–µ–ø–µ—Ä—å –¥–æ–ª–∂–µ–Ω, –ø–æ–º–∏–º–æ –ø—Ä–æ—á–µ–≥–æ, –≤—ã—á–∏—Ç–∞—Ç—å –∏–∑ –¥–µ–Ω–µ–≥ –í–æ–¥–∏—Ç–µ–ª—è —Å—É–º–º—É –∑–∞ –±–µ–Ω–∑–∏–Ω. –ö–æ–Ω–µ—á–Ω–æ, –µ—Å–ª–∏ —É –Ω–µ–≥–æ —Ö–≤–∞—Ç–∏—Ç –¥–µ–Ω–µ–≥ üòÑ
    func fuelBuy(liters: Double, price: Double) {
        guard Double(fuelTank) > fuel + liters else {
            let done = (Double(fuelTank) - fuel)
            guard driver.fuelBuy(cash: done * price) else {
                print("–ö—Ä–µ–¥–∏—Ç –±—É–¥–µ–º –æ—Ñ–æ—Ä–º–ª—è—Ç—å? –í—Å–µ–≥–æ 230% –≥–æ–¥–æ–≤—ã—Ö!")
                return
            }
            print("–ó–∞–ø—Ä–∞–≤–∏–ª \(done) –ª–∏—Ç—Ä–æ–≤!")
            return fuel = Double(fuelTank)
        }
        guard driver.fuelBuy(cash: liters * price) else {
            print("–ö—Ä–µ–¥–∏—Ç –±—É–¥–µ–º –æ—Ñ–æ—Ä–º–ª—è—Ç—å? –í—Å–µ–≥–æ 230% –≥–æ–¥–æ–≤—ã—Ö!")
            return
        }
        print("–ó–∞–ø—Ä–∞–≤–∏–ª \(liters) –ª–∏—Ç—Ä–æ–≤!")
        fuel += liters
    }
    //–ú–µ—Ç–æ–¥ ¬´–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ¬ª –≤—ã–≤–æ–¥–∏—Ç –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –ø–æ–ª–µ–∑–Ω—ã–º –≥—Ä—É–∑–æ–º
    func filling() {
        print("–ê–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –ø–æ–ª–µ–∑–Ω—ã–º –≥—Ä—É–∑–æ–º!")
    }
}

//–°–æ –∑–≤—ë–∑–¥–æ—á–∫–æ–π:
//–°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å –í–æ–¥–∏—Ç–µ–ª—å —Å–æ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ –∏–º—è –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–Ω–µ–≥ (–ø—Ä–∏–≤–∞—Ç–Ω–æ–µ).
class Driver {
    let name: String
    private var money: Double
    
    init(name: String, money: Double) {
        self.name = name
        self.money = money
    }
    
    func fuelBuy(cash: Double) -> Bool {
        guard money >= cash else {
            return false
        }
        money -= cash
        print("–î–µ–Ω–µ–≥ –æ—Å—Ç–∞–ª–æ—Å—å \(money)")
        return true
    }
}

//–°–æ–∑–¥–∞–π—Ç–µ –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–æ–≤ –∞–≤—Ç–æ–º–æ–±–∏–ª—è - –≥—Ä—É–∑–æ–≤–æ–π, –∞–≤—Ç–æ–±—É—Å
class Truck: Automobile {
    //–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è –≥—Ä—É–∑–æ–≤–æ–≥–æ - –≥—Ä—É–∑–æ–ø–æ–¥—ä—ë–º–Ω–æ—Å—Ç—å –∏ –≤—ã—á–∏—Å–ª—è–µ–º–æ–µ - —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –º–∞—Å—Å–∞ –¢–°.
    var weight: Int
    var selfWeight: Int {
        4500 + weight // 4500 –º–∞—Å—Å–∞ –¢–° + –≥—Ä—É–∑ –∏–ª–∏ —è –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–Ω—è–ª —É—Å–ª–æ–≤–∏–µ
    }
    
    init(name: String,
         year: Int,
         fuel: Double,
         distance: Int,
         midFuelOn100km: Int,
         fuelTank: Int,
         maxMass: Int,
         driver: Driver,
         weight: Int) {
        self.weight = weight
        super.init(name: name,
                   year: year,
                   fuel: fuel,
                   distance: distance,
                   midFuelOn100km: midFuelOn100km,
                   fuelTank: fuelTank,
                   maxMass: maxMass,
                   driver: driver)
        
    }
    //–ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –º–µ—Ç–æ–¥ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–ª–∞—Å—Å–æ–≤. –ì—Ä—É–∑–æ–≤–∏–∫ - –∑–∞–ø–æ–ª–Ω—è—Ç—å –∫—É–∑–æ–≤ –Ω–∞ 300 –∫–≥ (–Ω–æ –Ω–µ –±–æ–ª–µ–µ –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –∫—É–∑–æ–≤–∞).
    override func filling() {
        guard maxMass >= selfWeight + 300 else { return }
        weight += 300
    }
    //–ü–µ—Ä–µ–≥—Ä—É–∑–∏—Ç–µ –º–µ—Ç–æ–¥ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –≤ –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–ª–∞—Å—Å–∞—Ö —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ –∏–ª–∏ –≥—Ä—É–∑–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ
    func filling(mass: Int) {
        guard maxMass >= selfWeight + mass else { return }
        weight += mass
    }
}

class Bus: Automobile {
    //–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è –∞–≤—Ç–æ–±—É—Å–∞ - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ –∏ –≤—ã—á–∏—Å–ª—è–µ–º–æ–µ - —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –º–∞—Å—Å–∞ –¢–°.
    //–î–ª—è —Ä–∞—Å—á—ë—Ç–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –º–∞—Å—Å—ã –≤ —Ç–æ–º —Å–ª—É—á–∞–µ –ø—Ä–∏–Ω—è—Ç—å –≤–µ—Å 1 –ø–∞—Å—Å–∞–∂–∏—Ä–∞ —Ä–∞–≤–Ω—ã–º 85 –∫–≥.
    var passengers: Int
    var selfWeight: Int {
        4500 + passengers * 85
    }
    
    init(name: String,
         year: Int,
         fuel: Double,
         distance: Int,
         midFuelOn100km: Int,
         fuelTank: Int,
         maxMass: Int,
         driver: Driver,
         passengers: Int) {
        self.passengers = passengers
        super.init(name: name,
                   year: year,
                   fuel: fuel,
                   distance: distance,
                   midFuelOn100km: midFuelOn100km,
                   fuelTank: fuelTank,
                   maxMass: maxMass,
                   driver: driver)
        
    }
    //–ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –º–µ—Ç–æ–¥ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–ª–∞—Å—Å–æ–≤. –ê–≤—Ç–æ–±—É—Å –¥–æ–ª–∂–µ–Ω –ø—Ä–∏ –≤—ã–∑–æ–≤–µ —ç—Ç–æ–≥–æ –º–µ—Ç–æ–¥–∞ –∑–∞–ø–æ–ª–Ω—è—Ç—å —Å–≤–æ–∏ —Å–≤–æ–±–æ–¥–Ω—ã–µ –º–µ—Å—Ç–∞ –Ω–∞ 10 —á–µ–ª–æ–≤–µ–∫ (–Ω–æ –Ω–µ –±–æ–ª–µ–µ, —á–µ–º –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å).
    override func filling() {
        guard maxMass >= selfWeight + 850 else { return }
        passengers += 10
    }
    //–ü–µ—Ä–µ–≥—Ä—É–∑–∏—Ç–µ –º–µ—Ç–æ–¥ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –≤ –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–ª–∞—Å—Å–∞—Ö —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ –∏–ª–∏ –≥—Ä—É–∑–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ
    func filling(pass: Int) {
        guard maxMass >= selfWeight + pass * 85 else { return }
        passengers += pass
    }
}


let vasya = Driver(name: "–í–∞—Å—è", money: 3500)
let jiga = Automobile(name: "–ñ–∏–≥–∞", year: 1998, fuel: 20, distance: 300260, midFuelOn100km: 9, fuelTank: 50, maxMass: 2500, driver: vasya)
jiga.isOld
jiga.drive(km: 150)
jiga.fuel
jiga.distance
jiga.drive(km: 150)
jiga.fuel
jiga.distance
jiga.drive(km: 150)
jiga.fuel
jiga.distance
jiga.about()
jiga.fuelBuy(liters: 40, price: 50.0)
jiga.fuel
jiga.fuelBuy(liters: 20, price: 50.0)
jiga.fuel
jiga.fuelBuy(liters: 10, price: 50.0)
jiga.fuel
jiga.filling()
let bus = Bus(name: "–ü–ê–ó–ò–ö", year: 1846, fuel: 400, distance: 9567342156, midFuelOn100km: 100, fuelTank: 1000, maxMass: 9000, driver: vasya, passengers: 40)
bus.passengers
bus.selfWeight
bus.filling()
bus.passengers
bus.selfWeight
bus.filling(pass: 2)
bus.passengers
bus.selfWeight
bus.filling(pass: 1)
bus.passengers
bus.selfWeight

